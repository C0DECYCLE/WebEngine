/*
    Palto Studio
    Developed by Noah Bussinger
    2022
*/

const log = console.log;

const PHI: float = (1.0 + 5.0 ** 0.5) / 2.0;

const toAngle: float = 180 / Math.PI;
const toRadian: float = Math.PI / 180;

function UUIDv4(): string {
    return `${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`.replace(/[018]/g, (c: any) =>
        (
            c ^
            (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))
        ).toString(16)
    );
}

Number.prototype.between = function (a: int | float, b: int | float): boolean {
    return this.valueOf() > Math.min(a, b) && this.valueOf() < Math.max(a, b);
};

Number.prototype.dotit = function (): string {
    return Math.round(this.valueOf())
        .toString()
        .replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
};

Number.prototype.clamp = function (min: int | float, max: int | float): float {
    return Math.min(Math.max(this.valueOf(), min), max);
};

String.prototype.firstLetterUppercase = function (): string {
    return this.charAt(0).toUpperCase() + this.slice(1);
};

String.prototype.replaceAt = function (
    index: int,
    replacement: string
): string {
    return (
        this.substring(0, index) +
        replacement +
        this.substring(index + replacement.length)
    );
};

Array.prototype.clear = function (): void {
    this.length = 0;
};

/////////////////////////////PRIMITIVE/////////////////////////////

const PLANEpositions: Float32Array = new Float32Array([
    -0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, 0.5, 0, -0.5,
    0.5, 0,
]);

const CUBEpositions: Float32Array = new Float32Array([
    -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5,
    0.5, -0.5, 0.5, 0.5, -0.5, 0.5, -0.5, 0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5,
    0.5, -0.5, 0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5, 0.5, -0.5, -0.5, -0.5,
    -0.5, -0.5, -0.5, 0.5, -0.5, 0.5, -0.5, -0.5, -0.5, 0.5, -0.5, 0.5, 0.5,
    0.5, 0.5, 0.5, 0.5, -0.5, 0.5, 0.5, -0.5, -0.5, 0.5, 0.5, 0.5, 0.5, -0.5,
    -0.5, 0.5, 0.5, -0.5, 0.5, 0.5, 0.5, 0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5,
    0.5, 0.5, -0.5, 0.5, -0.5, -0.5, 0.5, 0.5, -0.5, -0.5, 0.5, -0.5, -0.5,
    -0.5, 0.5, -0.5, -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5,
]);

const ICOpositions: Float32Array = new Float32Array([
    0.53, 0.85, 0, 0.85, 0, -0.53, 0, 0.53, -0.85, 0.53, 0.85, 0, 0, 0.53,
    -0.85, -0.53, 0.85, 0, 0.53, 0.85, 0, -0.53, 0.85, 0, 0, 0.53, 0.85, 0.53,
    0.85, 0, 0, 0.53, 0.85, 0.85, 0, 0.53, 0.53, 0.85, 0, 0.85, 0, 0.53, 0.85,
    0, -0.53, -0.53, 0.85, 0, 0, 0.53, -0.85, -0.85, 0, -0.53, 0, 0.53, -0.85,
    0.85, 0, -0.53, 0, -0.53, -0.85, 0.85, 0, -0.53, 0.85, 0, 0.53, 0.53, -0.85,
    0, 0.85, 0, 0.53, 0, 0.53, 0.85, 0, -0.53, 0.85, 0, 0.53, 0.85, -0.53, 0.85,
    0, -0.85, 0, 0.53, -0.53, -0.85, 0, -0.85, 0, -0.53, 0, -0.53, -0.85, -0.53,
    -0.85, 0, 0, -0.53, -0.85, 0.53, -0.85, 0, -0.53, -0.85, 0, 0.53, -0.85, 0,
    0, -0.53, 0.85, -0.53, -0.85, 0, 0, -0.53, 0.85, -0.85, 0, 0.53, -0.53,
    -0.85, 0, -0.85, 0, 0.53, -0.85, 0, -0.53, 0, -0.53, -0.85, -0.85, 0, -0.53,
    0, 0.53, -0.85, 0.53, -0.85, 0, 0, -0.53, -0.85, 0.85, 0, -0.53, 0, -0.53,
    0.85, 0.53, -0.85, 0, 0.85, 0, 0.53, -0.85, 0, 0.53, 0, -0.53, 0.85, 0,
    0.53, 0.85, -0.85, 0, -0.53, -0.85, 0, 0.53, -0.53, 0.85, 0,
]);

const Fpositions: Float32Array = new Float32Array([
    0, 0, 0, 0, 1.5, 0, 0.3, 0, 0, 0, 1.5, 0, 0.3, 1.5, 0, 0.3, 0, 0, 0.3, 0, 0,
    0.3, 0.3, 0, 1, 0, 0, 0.3, 0.3, 0, 1, 0.3, 0, 1, 0, 0, 0.3, 0.6, 0, 0.3,
    0.9, 0, 0.67, 0.6, 0, 0.3, 0.9, 0, 0.67, 0.9, 0, 0.67, 0.6, 0, 0, 0, 0.3,
    0.3, 0, 0.3, 0, 1.5, 0.3, 0, 1.5, 0.3, 0.3, 0, 0.3, 0.3, 1.5, 0.3, 0.3, 0,
    0.3, 1, 0, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 1, 0, 0.3, 1, 0.3, 0.3, 0.3,
    0.6, 0.3, 0.67, 0.6, 0.3, 0.3, 0.9, 0.3, 0.3, 0.9, 0.3, 0.67, 0.6, 0.3,
    0.67, 0.9, 0.3, 0, 0, 0, 1, 0, 0, 1, 0, 0.3, 0, 0, 0, 1, 0, 0.3, 0, 0, 0.3,
    1, 0, 0, 1, 0.3, 0, 1, 0.3, 0.3, 1, 0, 0, 1, 0.3, 0.3, 1, 0, 0.3, 0.3, 0.3,
    0, 0.3, 0.3, 0.3, 1, 0.3, 0.3, 0.3, 0.3, 0, 1, 0.3, 0.3, 1, 0.3, 0, 0.3,
    0.3, 0, 0.3, 0.6, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0, 0.3, 0.6, 0, 0.3, 0.6,
    0.3, 0.3, 0.6, 0, 0.67, 0.6, 0.3, 0.3, 0.6, 0.3, 0.3, 0.6, 0, 0.67, 0.6, 0,
    0.67, 0.6, 0.3, 0.67, 0.6, 0, 0.67, 0.9, 0.3, 0.67, 0.6, 0.3, 0.67, 0.6, 0,
    0.67, 0.9, 0, 0.67, 0.9, 0.3, 0.3, 0.9, 0, 0.3, 0.9, 0.3, 0.67, 0.9, 0.3,
    0.3, 0.9, 0, 0.67, 0.9, 0.3, 0.67, 0.9, 0, 0.3, 0.9, 0, 0.3, 1.5, 0.3, 0.3,
    0.9, 0.3, 0.3, 0.9, 0, 0.3, 1.5, 0, 0.3, 1.5, 0.3, 0, 1.5, 0, 0, 1.5, 0.3,
    0.3, 1.5, 0.3, 0, 1.5, 0, 0.3, 1.5, 0.3, 0.3, 1.5, 0, 0, 0, 0, 0, 0, 0.3, 0,
    1.5, 0.3, 0, 0, 0, 0, 1.5, 0.3, 0, 1.5, 0,
]);

const TORUSpositions: Float32Array = new Float32Array([
    0, 0, 0.25, 0, -0.16, 0.31, -0.16, 0, 0.19, 0, -0.16, 0.31, -0.2, -0.16,
    0.24, -0.16, 0, 0.19, 0, -0.16, 0.31, 0, -0.25, 0.46, -0.2, -0.16, 0.24, 0,
    -0.25, 0.46, -0.29, -0.25, 0.35, -0.2, -0.16, 0.24, 0, -0.25, 0.46, 0,
    -0.22, 0.63, -0.29, -0.25, 0.35, 0, -0.22, 0.63, -0.4, -0.22, 0.48, -0.29,
    -0.25, 0.35, 0, -0.22, 0.63, 0, -0.09, 0.73, -0.4, -0.22, 0.48, 0, -0.09,
    0.73, -0.47, -0.09, 0.56, -0.4, -0.22, 0.48, 0, -0.09, 0.73, 0, 0.09, 0.73,
    -0.47, -0.09, 0.56, 0, 0.09, 0.73, -0.47, 0.09, 0.56, -0.47, -0.09, 0.56, 0,
    0.09, 0.73, 0, 0.22, 0.63, -0.47, 0.09, 0.56, 0, 0.22, 0.63, -0.4, 0.22,
    0.48, -0.47, 0.09, 0.56, 0, 0.22, 0.63, 0, 0.25, 0.46, -0.4, 0.22, 0.48, 0,
    0.25, 0.46, -0.29, 0.25, 0.35, -0.4, 0.22, 0.48, 0, 0.25, 0.46, 0, 0.16,
    0.31, -0.29, 0.25, 0.35, 0, 0.16, 0.31, -0.2, 0.16, 0.24, -0.29, 0.25, 0.35,
    0, 0.16, 0.31, 0, 0, 0.25, -0.2, 0.16, 0.24, 0, 0, 0.25, -0.16, 0, 0.19,
    -0.2, 0.16, 0.24, 0, 0, 0.25, 0, 0, 0.25, -0.16, 0, 0.19, 0, 0, 0.25, -0.16,
    0, 0.19, -0.16, 0, 0.19, -0.16, 0, 0.19, -0.2, -0.16, 0.24, -0.25, 0, 0.04,
    -0.2, -0.16, 0.24, -0.3, -0.16, 0.05, -0.25, 0, 0.04, -0.2, -0.16, 0.24,
    -0.29, -0.25, 0.35, -0.3, -0.16, 0.05, -0.29, -0.25, 0.35, -0.45, -0.25,
    0.08, -0.3, -0.16, 0.05, -0.29, -0.25, 0.35, -0.4, -0.22, 0.48, -0.45,
    -0.25, 0.08, -0.4, -0.22, 0.48, -0.62, -0.22, 0.11, -0.45, -0.25, 0.08,
    -0.4, -0.22, 0.48, -0.47, -0.09, 0.56, -0.62, -0.22, 0.11, -0.47, -0.09,
    0.56, -0.72, -0.09, 0.13, -0.62, -0.22, 0.11, -0.47, -0.09, 0.56, -0.47,
    0.09, 0.56, -0.72, -0.09, 0.13, -0.47, 0.09, 0.56, -0.72, 0.09, 0.13, -0.72,
    -0.09, 0.13, -0.47, 0.09, 0.56, -0.4, 0.22, 0.48, -0.72, 0.09, 0.13, -0.4,
    0.22, 0.48, -0.62, 0.22, 0.11, -0.72, 0.09, 0.13, -0.4, 0.22, 0.48, -0.29,
    0.25, 0.35, -0.62, 0.22, 0.11, -0.29, 0.25, 0.35, -0.45, 0.25, 0.08, -0.62,
    0.22, 0.11, -0.29, 0.25, 0.35, -0.2, 0.16, 0.24, -0.45, 0.25, 0.08, -0.2,
    0.16, 0.24, -0.3, 0.16, 0.05, -0.45, 0.25, 0.08, -0.2, 0.16, 0.24, -0.16, 0,
    0.19, -0.3, 0.16, 0.05, -0.16, 0, 0.19, -0.25, 0, 0.04, -0.3, 0.16, 0.05,
    -0.16, 0, 0.19, -0.16, 0, 0.19, -0.25, 0, 0.04, -0.16, 0, 0.19, -0.25, 0,
    0.04, -0.25, 0, 0.04, -0.25, 0, 0.04, -0.3, -0.16, 0.05, -0.22, 0, -0.12,
    -0.3, -0.16, 0.05, -0.27, -0.16, -0.15, -0.22, 0, -0.12, -0.3, -0.16, 0.05,
    -0.45, -0.25, 0.08, -0.27, -0.16, -0.15, -0.45, -0.25, 0.08, -0.4, -0.25,
    -0.23, -0.27, -0.16, -0.15, -0.45, -0.25, 0.08, -0.62, -0.22, 0.11, -0.4,
    -0.25, -0.23, -0.62, -0.22, 0.11, -0.54, -0.22, -0.31, -0.4, -0.25, -0.23,
    -0.62, -0.22, 0.11, -0.72, -0.09, 0.13, -0.54, -0.22, -0.31, -0.72, -0.09,
    0.13, -0.64, -0.09, -0.37, -0.54, -0.22, -0.31, -0.72, -0.09, 0.13, -0.72,
    0.09, 0.13, -0.64, -0.09, -0.37, -0.72, 0.09, 0.13, -0.64, 0.09, -0.37,
    -0.64, -0.09, -0.37, -0.72, 0.09, 0.13, -0.62, 0.22, 0.11, -0.64, 0.09,
    -0.37, -0.62, 0.22, 0.11, -0.54, 0.22, -0.31, -0.64, 0.09, -0.37, -0.62,
    0.22, 0.11, -0.45, 0.25, 0.08, -0.54, 0.22, -0.31, -0.45, 0.25, 0.08, -0.4,
    0.25, -0.23, -0.54, 0.22, -0.31, -0.45, 0.25, 0.08, -0.3, 0.16, 0.05, -0.4,
    0.25, -0.23, -0.3, 0.16, 0.05, -0.27, 0.16, -0.15, -0.4, 0.25, -0.23, -0.3,
    0.16, 0.05, -0.25, 0, 0.04, -0.27, 0.16, -0.15, -0.25, 0, 0.04, -0.22, 0,
    -0.12, -0.27, 0.16, -0.15, -0.25, 0, 0.04, -0.25, 0, 0.04, -0.22, 0, -0.12,
    -0.25, 0, 0.04, -0.22, 0, -0.12, -0.22, 0, -0.12, -0.22, 0, -0.12, -0.27,
    -0.16, -0.15, -0.09, 0, -0.23, -0.27, -0.16, -0.15, -0.11, -0.16, -0.29,
    -0.09, 0, -0.23, -0.27, -0.16, -0.15, -0.4, -0.25, -0.23, -0.11, -0.16,
    -0.29, -0.4, -0.25, -0.23, -0.16, -0.25, -0.43, -0.11, -0.16, -0.29, -0.4,
    -0.25, -0.23, -0.54, -0.22, -0.31, -0.16, -0.25, -0.43, -0.54, -0.22, -0.31,
    -0.21, -0.22, -0.59, -0.16, -0.25, -0.43, -0.54, -0.22, -0.31, -0.64, -0.09,
    -0.37, -0.21, -0.22, -0.59, -0.64, -0.09, -0.37, -0.25, -0.09, -0.69, -0.21,
    -0.22, -0.59, -0.64, -0.09, -0.37, -0.64, 0.09, -0.37, -0.25, -0.09, -0.69,
    -0.64, 0.09, -0.37, -0.25, 0.09, -0.69, -0.25, -0.09, -0.69, -0.64, 0.09,
    -0.37, -0.54, 0.22, -0.31, -0.25, 0.09, -0.69, -0.54, 0.22, -0.31, -0.21,
    0.22, -0.59, -0.25, 0.09, -0.69, -0.54, 0.22, -0.31, -0.4, 0.25, -0.23,
    -0.21, 0.22, -0.59, -0.4, 0.25, -0.23, -0.16, 0.25, -0.43, -0.21, 0.22,
    -0.59, -0.4, 0.25, -0.23, -0.27, 0.16, -0.15, -0.16, 0.25, -0.43, -0.27,
    0.16, -0.15, -0.11, 0.16, -0.29, -0.16, 0.25, -0.43, -0.27, 0.16, -0.15,
    -0.22, 0, -0.12, -0.11, 0.16, -0.29, -0.22, 0, -0.12, -0.09, 0, -0.23,
    -0.11, 0.16, -0.29, -0.22, 0, -0.12, -0.22, 0, -0.12, -0.09, 0, -0.23,
    -0.22, 0, -0.12, -0.09, 0, -0.23, -0.09, 0, -0.23, -0.09, 0, -0.23, -0.11,
    -0.16, -0.29, 0.09, 0, -0.23, -0.11, -0.16, -0.29, 0.11, -0.16, -0.29, 0.09,
    0, -0.23, -0.11, -0.16, -0.29, -0.16, -0.25, -0.43, 0.11, -0.16, -0.29,
    -0.16, -0.25, -0.43, 0.16, -0.25, -0.43, 0.11, -0.16, -0.29, -0.16, -0.25,
    -0.43, -0.21, -0.22, -0.59, 0.16, -0.25, -0.43, -0.21, -0.22, -0.59, 0.21,
    -0.22, -0.59, 0.16, -0.25, -0.43, -0.21, -0.22, -0.59, -0.25, -0.09, -0.69,
    0.21, -0.22, -0.59, -0.25, -0.09, -0.69, 0.25, -0.09, -0.69, 0.21, -0.22,
    -0.59, -0.25, -0.09, -0.69, -0.25, 0.09, -0.69, 0.25, -0.09, -0.69, -0.25,
    0.09, -0.69, 0.25, 0.09, -0.69, 0.25, -0.09, -0.69, -0.25, 0.09, -0.69,
    -0.21, 0.22, -0.59, 0.25, 0.09, -0.69, -0.21, 0.22, -0.59, 0.21, 0.22,
    -0.59, 0.25, 0.09, -0.69, -0.21, 0.22, -0.59, -0.16, 0.25, -0.43, 0.21,
    0.22, -0.59, -0.16, 0.25, -0.43, 0.16, 0.25, -0.43, 0.21, 0.22, -0.59,
    -0.16, 0.25, -0.43, -0.11, 0.16, -0.29, 0.16, 0.25, -0.43, -0.11, 0.16,
    -0.29, 0.11, 0.16, -0.29, 0.16, 0.25, -0.43, -0.11, 0.16, -0.29, -0.09, 0,
    -0.23, 0.11, 0.16, -0.29, -0.09, 0, -0.23, 0.09, 0, -0.23, 0.11, 0.16,
    -0.29, -0.09, 0, -0.23, -0.09, 0, -0.23, 0.09, 0, -0.23, -0.09, 0, -0.23,
    0.09, 0, -0.23, 0.09, 0, -0.23, 0.09, 0, -0.23, 0.11, -0.16, -0.29, 0.22, 0,
    -0.12, 0.11, -0.16, -0.29, 0.27, -0.16, -0.15, 0.22, 0, -0.12, 0.11, -0.16,
    -0.29, 0.16, -0.25, -0.43, 0.27, -0.16, -0.15, 0.16, -0.25, -0.43, 0.4,
    -0.25, -0.23, 0.27, -0.16, -0.15, 0.16, -0.25, -0.43, 0.21, -0.22, -0.59,
    0.4, -0.25, -0.23, 0.21, -0.22, -0.59, 0.54, -0.22, -0.31, 0.4, -0.25,
    -0.23, 0.21, -0.22, -0.59, 0.25, -0.09, -0.69, 0.54, -0.22, -0.31, 0.25,
    -0.09, -0.69, 0.64, -0.09, -0.37, 0.54, -0.22, -0.31, 0.25, -0.09, -0.69,
    0.25, 0.09, -0.69, 0.64, -0.09, -0.37, 0.25, 0.09, -0.69, 0.64, 0.09, -0.37,
    0.64, -0.09, -0.37, 0.25, 0.09, -0.69, 0.21, 0.22, -0.59, 0.64, 0.09, -0.37,
    0.21, 0.22, -0.59, 0.54, 0.22, -0.31, 0.64, 0.09, -0.37, 0.21, 0.22, -0.59,
    0.16, 0.25, -0.43, 0.54, 0.22, -0.31, 0.16, 0.25, -0.43, 0.4, 0.25, -0.23,
    0.54, 0.22, -0.31, 0.16, 0.25, -0.43, 0.11, 0.16, -0.29, 0.4, 0.25, -0.23,
    0.11, 0.16, -0.29, 0.27, 0.16, -0.15, 0.4, 0.25, -0.23, 0.11, 0.16, -0.29,
    0.09, 0, -0.23, 0.27, 0.16, -0.15, 0.09, 0, -0.23, 0.22, 0, -0.12, 0.27,
    0.16, -0.15, 0.09, 0, -0.23, 0.09, 0, -0.23, 0.22, 0, -0.12, 0.09, 0, -0.23,
    0.22, 0, -0.12, 0.22, 0, -0.12, 0.22, 0, -0.12, 0.27, -0.16, -0.15, 0.25, 0,
    0.04, 0.27, -0.16, -0.15, 0.3, -0.16, 0.05, 0.25, 0, 0.04, 0.27, -0.16,
    -0.15, 0.4, -0.25, -0.23, 0.3, -0.16, 0.05, 0.4, -0.25, -0.23, 0.45, -0.25,
    0.08, 0.3, -0.16, 0.05, 0.4, -0.25, -0.23, 0.54, -0.22, -0.31, 0.45, -0.25,
    0.08, 0.54, -0.22, -0.31, 0.62, -0.22, 0.11, 0.45, -0.25, 0.08, 0.54, -0.22,
    -0.31, 0.64, -0.09, -0.37, 0.62, -0.22, 0.11, 0.64, -0.09, -0.37, 0.72,
    -0.09, 0.13, 0.62, -0.22, 0.11, 0.64, -0.09, -0.37, 0.64, 0.09, -0.37, 0.72,
    -0.09, 0.13, 0.64, 0.09, -0.37, 0.72, 0.09, 0.13, 0.72, -0.09, 0.13, 0.64,
    0.09, -0.37, 0.54, 0.22, -0.31, 0.72, 0.09, 0.13, 0.54, 0.22, -0.31, 0.62,
    0.22, 0.11, 0.72, 0.09, 0.13, 0.54, 0.22, -0.31, 0.4, 0.25, -0.23, 0.62,
    0.22, 0.11, 0.4, 0.25, -0.23, 0.45, 0.25, 0.08, 0.62, 0.22, 0.11, 0.4, 0.25,
    -0.23, 0.27, 0.16, -0.15, 0.45, 0.25, 0.08, 0.27, 0.16, -0.15, 0.3, 0.16,
    0.05, 0.45, 0.25, 0.08, 0.27, 0.16, -0.15, 0.22, 0, -0.12, 0.3, 0.16, 0.05,
    0.22, 0, -0.12, 0.25, 0, 0.04, 0.3, 0.16, 0.05, 0.22, 0, -0.12, 0.22, 0,
    -0.12, 0.25, 0, 0.04, 0.22, 0, -0.12, 0.25, 0, 0.04, 0.25, 0, 0.04, 0.25, 0,
    0.04, 0.3, -0.16, 0.05, 0.16, 0, 0.19, 0.3, -0.16, 0.05, 0.2, -0.16, 0.24,
    0.16, 0, 0.19, 0.3, -0.16, 0.05, 0.45, -0.25, 0.08, 0.2, -0.16, 0.24, 0.45,
    -0.25, 0.08, 0.29, -0.25, 0.35, 0.2, -0.16, 0.24, 0.45, -0.25, 0.08, 0.62,
    -0.22, 0.11, 0.29, -0.25, 0.35, 0.62, -0.22, 0.11, 0.4, -0.22, 0.48, 0.29,
    -0.25, 0.35, 0.62, -0.22, 0.11, 0.72, -0.09, 0.13, 0.4, -0.22, 0.48, 0.72,
    -0.09, 0.13, 0.47, -0.09, 0.56, 0.4, -0.22, 0.48, 0.72, -0.09, 0.13, 0.72,
    0.09, 0.13, 0.47, -0.09, 0.56, 0.72, 0.09, 0.13, 0.47, 0.09, 0.56, 0.47,
    -0.09, 0.56, 0.72, 0.09, 0.13, 0.62, 0.22, 0.11, 0.47, 0.09, 0.56, 0.62,
    0.22, 0.11, 0.4, 0.22, 0.48, 0.47, 0.09, 0.56, 0.62, 0.22, 0.11, 0.45, 0.25,
    0.08, 0.4, 0.22, 0.48, 0.45, 0.25, 0.08, 0.29, 0.25, 0.35, 0.4, 0.22, 0.48,
    0.45, 0.25, 0.08, 0.3, 0.16, 0.05, 0.29, 0.25, 0.35, 0.3, 0.16, 0.05, 0.2,
    0.16, 0.24, 0.29, 0.25, 0.35, 0.3, 0.16, 0.05, 0.25, 0, 0.04, 0.2, 0.16,
    0.24, 0.25, 0, 0.04, 0.16, 0, 0.19, 0.2, 0.16, 0.24, 0.25, 0, 0.04, 0.25, 0,
    0.04, 0.16, 0, 0.19, 0.25, 0, 0.04, 0.16, 0, 0.19, 0.16, 0, 0.19, 0.16, 0,
    0.19, 0.2, -0.16, 0.24, 0, 0, 0.25, 0.2, -0.16, 0.24, 0, -0.16, 0.31, 0, 0,
    0.25, 0.2, -0.16, 0.24, 0.29, -0.25, 0.35, 0, -0.16, 0.31, 0.29, -0.25,
    0.35, 0, -0.25, 0.46, 0, -0.16, 0.31, 0.29, -0.25, 0.35, 0.4, -0.22, 0.48,
    0, -0.25, 0.46, 0.4, -0.22, 0.48, 0, -0.22, 0.63, 0, -0.25, 0.46, 0.4,
    -0.22, 0.48, 0.47, -0.09, 0.56, 0, -0.22, 0.63, 0.47, -0.09, 0.56, 0, -0.09,
    0.73, 0, -0.22, 0.63, 0.47, -0.09, 0.56, 0.47, 0.09, 0.56, 0, -0.09, 0.73,
    0.47, 0.09, 0.56, 0, 0.09, 0.73, 0, -0.09, 0.73, 0.47, 0.09, 0.56, 0.4,
    0.22, 0.48, 0, 0.09, 0.73, 0.4, 0.22, 0.48, 0, 0.22, 0.63, 0, 0.09, 0.73,
    0.4, 0.22, 0.48, 0.29, 0.25, 0.35, 0, 0.22, 0.63, 0.29, 0.25, 0.35, 0, 0.25,
    0.46, 0, 0.22, 0.63, 0.29, 0.25, 0.35, 0.2, 0.16, 0.24, 0, 0.25, 0.46, 0.2,
    0.16, 0.24, 0, 0.16, 0.31, 0, 0.25, 0.46, 0.2, 0.16, 0.24, 0.16, 0, 0.19, 0,
    0.16, 0.31, 0.16, 0, 0.19, 0, 0, 0.25, 0, 0.16, 0.31, 0.16, 0, 0.19, 0.16,
    0, 0.19, 0, 0, 0.25, 0.16, 0, 0.19, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0.25, 0,
    -0.16, 0.31, 0, 0, 0.25, 0, -0.16, 0.31, 0, -0.16, 0.31, 0, 0, 0.25, 0,
    -0.16, 0.31, 0, -0.25, 0.46, 0, -0.16, 0.31, 0, -0.25, 0.46, 0, -0.25, 0.46,
    0, -0.16, 0.31, 0, -0.25, 0.46, 0, -0.22, 0.63, 0, -0.25, 0.46, 0, -0.22,
    0.63, 0, -0.22, 0.63, 0, -0.25, 0.46, 0, -0.22, 0.63, 0, -0.09, 0.73, 0,
    -0.22, 0.63, 0, -0.09, 0.73, 0, -0.09, 0.73, 0, -0.22, 0.63, 0, -0.09, 0.73,
    0, 0.09, 0.73, 0, -0.09, 0.73, 0, 0.09, 0.73, 0, 0.09, 0.73, 0, -0.09, 0.73,
    0, 0.09, 0.73, 0, 0.22, 0.63, 0, 0.09, 0.73, 0, 0.22, 0.63, 0, 0.22, 0.63,
    0, 0.09, 0.73, 0, 0.22, 0.63, 0, 0.25, 0.46, 0, 0.22, 0.63, 0, 0.25, 0.46,
    0, 0.25, 0.46, 0, 0.22, 0.63, 0, 0.25, 0.46, 0, 0.16, 0.31, 0, 0.25, 0.46,
    0, 0.16, 0.31, 0, 0.16, 0.31, 0, 0.25, 0.46, 0, 0.16, 0.31, 0, 0, 0.25, 0,
    0.16, 0.31, 0, 0, 0.25, 0, 0, 0.25, 0, 0.16, 0.31, 0, 0, 0.25, 0, 0, 0.25,
    0, 0, 0.25, 0, 0, 0.25, 0, 0, 0.25, 0, 0, 0.25,
]);
